(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{447:function(t,s,a){"use strict";a.r(s);var n=a(2),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"一-字符串-string-类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一-字符串-string-类"}},[t._v("#")]),t._v(" 一.字符串(String)类:")]),t._v(" "),s("h3",{attrs:{id:"_1-字符串用途"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-字符串用途"}},[t._v("#")]),t._v(" 1.字符串用途:")]),t._v(" "),s("p",[t._v("​\t\t\t\ta.用于字符串常量,也就是说字符串的值不会改变")]),t._v(" "),s("h3",{attrs:{id:"_2-string代码解释"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-string代码解释"}},[t._v("#")]),t._v(" 2. String代码解释=>")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*1.赋值时相当于执行一次new操作*/")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" name"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nname"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hong"')]),t._v("  \n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hong"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('/*2.当赋值为""时,有创建空间,只是里面没有值*/')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" name"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" name"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*3.赋值为null时相当于没有创建空间*/")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" name"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*4.引用类型判断时,通常都要先判断是否为空再判断空字符串*/")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("equal")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h3",{attrs:{id:"_3-字符串主要构造函数方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-字符串主要构造函数方法"}},[t._v("#")]),t._v(" 3.字符串主要构造函数方法=>")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"left"}},[t._v("方法")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("说明")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("String()")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("生成一个空串")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("String(String  value)")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("用已知串生成一个串对象")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("String(char value[])")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("用字符数组生成一个串对象")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("String(char value[] , int offset , int count)")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("用字符数组value的offset位置开始的count个字符,建立一个字符串对象,之后并不影响原来的字符串数组")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("String(StringBuffer  value)")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("用已经存在的StringBuffer对象初始化String对象")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}}),t._v(" "),s("td",{staticStyle:{"text-align":"left"}})])])]),t._v(" "),s("h3",{attrs:{id:"_4-字符串比较方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-字符串比较方法"}},[t._v("#")]),t._v(" 4.字符串比较方法=>")]),t._v(" "),s("ol",[s("li",[t._v("equals()=>  检查组成字符串内容的字符是否一致")]),t._v(" "),s("li",[t._v('"=="符号比较=>  判断两个字符串在内存中的首地址,即判断是否是同一个字符串对象')]),t._v(" "),s("li",[t._v("equalslgnoreCase()方法=>  忽略大小写比较")]),t._v(" "),s("li",[t._v("toLowerCase()方法=>  将双方变为小写字符比较")]),t._v(" "),s("li",[t._v("toUpperCase()方法=>  将双方变为大写字符比较")]),t._v(" "),s("li",[t._v("compareTo()方法=> 按字典顺序比较两个字符串")])]),t._v(" "),s("h3",{attrs:{id:"_5-字符串连接方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-字符串连接方法"}},[t._v("#")]),t._v(" 5.字符串连接方法=>")]),t._v(" "),s("ol",[s("li",[t._v('使用"+"')]),t._v(" "),s("li",[t._v("使用String类的concat()方法")])]),t._v(" "),s("h3",{attrs:{id:"_6-字符串常用提取方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-字符串常用提取方法"}},[t._v("#")]),t._v(" 6.字符串常用提取方法=>")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("方法")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("说明")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("public int "),s("strong",[t._v("indexOf")]),t._v("(int ch)"),s("br"),t._v("public int "),s("strong",[t._v("indexOf")]),t._v("(String value)")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("搜索第一个出现的字符ch(或字符串value)")])]),t._v(" "),s("tr",[s("td",[t._v("public int "),s("strong",[t._v("lastIndexOf")]),t._v("(int ch)"),s("br"),t._v("public int "),s("strong",[t._v("lastIndexOf")]),t._v("(String value)")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("搜索最后一个出现的字符ch(或字符串value)")])]),t._v(" "),s("tr",[s("td",[t._v("public char "),s("strong",[t._v("charAt")]),t._v("(int index)")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("查找字符串的第index个字符")])]),t._v(" "),s("tr",[s("td",[t._v("public String "),s("strong",[t._v("substring")]),t._v("(int index)")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("提取从位置索引开始的字符串部分")])]),t._v(" "),s("tr",[s("td",[t._v("public String "),s("strong",[t._v("substring")]),t._v("(int beginindex,int endindex)")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("提取beginindex和endindex之间的字符串部分")])]),t._v(" "),s("tr",[s("td",[t._v("public String "),s("strong",[t._v("trim")]),t._v("()")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("返回一个前后不含任何空格的调用字符串的副本")])]),t._v(" "),s("tr",[s("td",[t._v("public boolean "),s("strong",[t._v("startWith")]),t._v("(String prefix)"),s("br"),t._v("public boolean "),s("strong",[t._v("endWith")]),t._v("(String suffix)")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("测试字符串的起始字符串和结束字符串(验证开头和结尾是否为输入的字符出啊)")])]),t._v(" "),s("tr",[s("td",[t._v("public String "),s("strong",[t._v("replace")]),t._v("(char oldChar , char new Char)")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("字符串替换")])]),t._v(" "),s("tr",[s("td",[t._v("String."),s("strong",[t._v("split")]),t._v("(char value)")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("字符串拆分")])])])]),t._v(" "),s("h2",{attrs:{id:"二-stringbuffer类-string增强版"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二-stringbuffer类-string增强版"}},[t._v("#")]),t._v(" 二.StringBuffer类(String增强版)")]),t._v(" "),s("h3",{attrs:{id:"_1-stringbuffer用途"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-stringbuffer用途"}},[t._v("#")]),t._v(" 1.StringBuffer用途")]),t._v(" "),s("p",[t._v("​\t\ta.用于字符串变量,也就是说字符串的值可以改变")]),t._v(" "),s("h3",{attrs:{id:"_2-stringbuffer的代码声明与使用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-stringbuffer的代码声明与使用"}},[t._v("#")]),t._v(" 2.StringBuffer的代码声明与使用=>")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*1.StringBuffer的声明*/")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StringBuffer")]),t._v(" sb"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StringBuffer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//创建空StringBuffer对象")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StringBuffer")]),t._v(" sb"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StringBuffer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//创建长度为5StringBuffer对象")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StringBuffer")]),t._v(" sb"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StringBuffer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello World"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//创建一个变量存储字符串"hello World"')]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*2.StringBuffer的使用*/")]),t._v("\nsb"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//转化为String类型")]),t._v("\nsb"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("append")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"**"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//追加字符串")]),t._v("\n")])])]),s("h3",{attrs:{id:"_3-stringbuffer类的常用方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-stringbuffer类的常用方法"}},[t._v("#")]),t._v(" 3.StringBuffer类的常用方法=>")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("方法")]),t._v(" "),s("th",[t._v("说明")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[s("strong",[t._v("setLength")]),t._v("(int newlength)")]),t._v(" "),s("td",[t._v("重新设置字符串的长度,新串会为旧串的截余(常用来截取前几位)")])]),t._v(" "),s("tr",[s("td",[s("strong",[t._v("setCharAt")]),t._v("(int index, char ch)")]),t._v(" "),s("td",[t._v("重设指定位置的字符串")])]),t._v(" "),s("tr",[s("td",[s("strong",[t._v("append")]),t._v("(Object obj)")]),t._v(" "),s("td",[t._v("将指定对象转化为字符串添加到原串尾部")])]),t._v(" "),s("tr",[s("td",[s("strong",[t._v("insert")]),t._v("(int offset ,Object obj)")]),t._v(" "),s("td",[t._v("将指定对象转换为字符串,然后插入到从offset开始的位置")])]),t._v(" "),s("tr",[s("td",[s("strong",[t._v("capacity")])]),t._v(" "),s("td",[t._v("求字符串容量(不等于字符串长度)")])]),t._v(" "),s("tr",[s("td",[s("strong",[t._v("deleteCharAt")]),t._v("( int index)"),s("br"),s("strong",[t._v("delete")]),t._v("(int start,int end)")]),t._v(" "),s("td",[t._v("删除字符")])]),t._v(" "),s("tr",[s("td",[s("strong",[t._v("reverse()")])]),t._v(" "),s("td",[t._v("翻转字符串")])]),t._v(" "),s("tr",[s("td"),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td"),t._v(" "),s("td")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);